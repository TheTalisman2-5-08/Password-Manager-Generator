import tkinter as tk
from tkinter import messagebox
import random
import string

# Password Manager class
class PasswordManager:
    def __init__(self, master):
        self.master = master
        master.title("Password Manager")
        master.geometry("600x500")
        master.configure(bg="#2C2C2C")

        # Create labels and entry fields
        self.website_label = tk.Label(master, text="Website:", font=("Arial", 16), bg="#2C2C2C", fg="#FFFFFF")
        self.website_label.pack(pady=10)
        self.website_entry = tk.Entry(master, font=("Arial", 14))
        self.website_entry.pack(pady=5)

        self.username_label = tk.Label(master, text="Username:", font=("Arial", 16), bg="#2C2C2C", fg="#FFFFFF")
        self.username_label.pack(pady=10)
        self.username_entry = tk.Entry(master, font=("Arial", 14))
        self.username_entry.pack(pady=5)

        self.password_label = tk.Label(master, text="Password:", font=("Arial", 16), bg="#2C2C2C", fg="#FFFFFF")
        self.password_label.pack(pady=10)
        self.password_entry = tk.Entry(master, show="*", font=("Arial", 14))
        self.password_entry.pack(pady=5)

        self.credentials_label = tk.Label(master, text="", font=("Arial", 14), bg="#2C2C2C", fg="#FFFFFF")
        self.credentials_label.pack(pady=10)

        # Create buttons
        self.save_button = tk.Button(master, text="Save", font=("Arial", 14), bg="#4CAF50", fg="#FFFFFF", command=self.save_password)
        self.save_button.pack(pady=10)

        self.retrieve_button = tk.Button(master, text="Retrieve", font=("Arial", 14), bg="#2196F3", fg="#FFFFFF", command=self.retrieve_password)
        self.retrieve_button.pack(pady=10)

        self.generate_button = tk.Button(master, text="Generate Password", font=("Arial", 14), bg="#FF9800", fg="#FFFFFF", command=self.generate_password)
        self.generate_button.pack(pady=10)

        # Create password dictionary
        self.passwords = {}

    def save_password(self):
        website = self.website_entry.get()
        username = self.username_entry.get()
        password = self.password_entry.get()

        if website and username and password:
            self.passwords[website] = {
                "username": username,
                "password": password
            }
            messagebox.showinfo("Success", "Password saved successfully!", parent=self.master)
            self.website_entry.delete(0, tk.END)
            self.username_entry.delete(0, tk.END)
            self.password_entry.delete(0, tk.END)
            self.credentials_label.config(text="")
        else:
            messagebox.showerror("Error", "Please fill in all fields.", parent=self.master)

    def retrieve_password(self):
        website = self.website_entry.get()

        if website in self.passwords:
            username = self.passwords[website]["username"]
            password = self.passwords[website]["password"]
            self.credentials_label.config(text=f"Username: {username}\nPassword: {password}")
        else:
            self.credentials_label.config(text="No password found for the given website.")

    def generate_password(self):
        length = 12
        characters = string.ascii_letters + string.digits + string.punctuation
        password = ''.join(random.choice(characters) for _ in range(length))
        self.password_entry.delete(0, tk.END)
        self.password_entry.insert(0, password)

root = tk.Tk()
password_manager = PasswordManager(root)
root.mainloop()
